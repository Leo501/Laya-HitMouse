var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GameTopPanel_1 = require("./layer/GameTopPanel");
var HammerMgr_1 = require("./manger/HammerMgr");
var GameMouseLayer_1 = require("./layer/GameMouseLayer");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("layer/GameTopPanel.ts", GameTopPanel_1.default);
        reg("manger/HammerMgr.ts", HammerMgr_1.default);
        reg("layer/GameMouseLayer.ts", GameMouseLayer_1.default);
    };
    GameConfig.width = 1136;
    GameConfig.height = 640;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "horizontal";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "Scene/GameMain.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();

},{"./layer/GameMouseLayer":3,"./layer/GameTopPanel":4,"./manger/HammerMgr":5}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();

},{"./GameConfig":1}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameModel_1 = require("../module/GameModel");
var ListenerManger_1 = require("../manger/ListenerManger");
var GameLayer = /** @class */ (function (_super) {
    __extends(GameLayer, _super);
    function GameLayer() {
        var _this = _super.call(this) || this;
        _this.mouseArr = [];
        _this.skis = ['ui/mouse_normal_1.png', 'ui/mouse_normal_2.png'];
        _this.hitSkis = ['ui/mouse_hit_1.png', 'ui/mouse_hit_2.png'];
        return _this;
    }
    GameLayer.prototype.onEnable = function () {
        ListenerManger_1.ListenerMgr.Instance().on('onHammerHit', this, this.onCheckHit);
    };
    GameLayer.prototype.onStart = function () {
        this.mouseBirthAI();
    };
    GameLayer.prototype.mouseBirthAI = function () {
        var id = (Math.random() * 9 + 1) | 0;
        while (id == GameModel_1.default.Instacne().curHoleIdx) {
            id = (Math.random() * 9 + 1) | 0;
        }
        var type = ((Math.random() * 4) | 0);
        type = type == 0 ? 1 : 0;
        if (!this.mouseArr[id]) {
            this.mouseArr[id] = this.mousCreateById(id, type);
        }
        var mouse = this.mouseArr[id];
        mouse.skin = this.skis[type];
        this.mouseUpAnim(mouse);
        Laya.timer.once(1500, this, this.mouseDownAnim, [mouse]);
        GameModel_1.default.Instacne().curMouseType = type;
        GameModel_1.default.Instacne().curHoleIdx = id;
    };
    GameLayer.prototype.mousCreateById = function (id, type) {
        var mouseItem = this.owner.getChildByName('mouseItem_' + id);
        var bg = mouseItem.getChildByName('bg');
        var mouse = new Laya.Image(this.skis[type]);
        mouse.alpha = 0;
        bg.addChild(mouse);
        return mouse;
    };
    GameLayer.prototype.mouseUpAnim = function (celler) {
        celler.visible = true;
        Laya.Tween.to(celler, { alpha: 1 }, 100);
        Laya.Tween.to(celler, { y: -23 }, 200, Laya.Ease.linearIn, null, 100);
    };
    GameLayer.prototype.stopMouseDownTimeout = function () {
        Laya.timer.clear(this, this.mouseDownAnim);
    };
    GameLayer.prototype.mouseDownAnim = function (celler) {
        var _this = this;
        Laya.Tween.to(celler, { y: 0 }, 200);
        Laya.Tween.to(celler, { alpha: 0 }, 100, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
            celler.visible = false;
            _this.mouseBirthAI();
        }), 200);
    };
    GameLayer.prototype.checkHit = function (bounds) {
        for (var i = 1; i <= 10; i++) {
            var mouse = this.mouseArr[i];
            if (!mouse)
                continue;
            var targetBounds = mouse.getBounds();
            var globalPos = mouse.localToGlobal(new Laya.Point(0, 0));
            targetBounds.x = globalPos.x;
            targetBounds.y = globalPos.y;
            var isHit = targetBounds.intersection(bounds);
            if (isHit)
                return i;
        }
        return -1;
    };
    GameLayer.prototype.hitMouseAnim = function (celler) {
        celler.y = 0;
        celler.skin = this.hitSkis[GameModel_1.default.Instacne().curMouseType];
    };
    GameLayer.prototype.onCheckHit = function (hammer) {
        var idx = this.checkHit(hammer.getBounds());
        console.log('hit mouse No is ', idx);
        var mouse = this.mouseArr[idx];
        mouse && this.hitMouseAnim(mouse);
    };
    GameLayer.prototype.onDisable = function () {
        ListenerManger_1.ListenerMgr.Instance().offAllCaller(this);
    };
    return GameLayer;
}(Laya.Script));
exports.default = GameLayer;

},{"../manger/ListenerManger":6,"../module/GameModel":7}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameTopPanel = /** @class */ (function (_super) {
    __extends(GameTopPanel, _super);
    function GameTopPanel() {
        return _super.call(this) || this;
    }
    GameTopPanel.prototype.onEnable = function () {
    };
    GameTopPanel.prototype.onStart = function () {
        this.chanceTime = this.owner.getChildByName('chanceTime');
        this.gameScore = this.owner.getChildByName('score');
        this.initUI();
    };
    GameTopPanel.prototype.initUI = function () {
        this.setChanceTime(1);
        this.setGameScore(100);
    };
    GameTopPanel.prototype.setChanceTime = function (numb) {
        this.chanceTime.value = numb;
    };
    GameTopPanel.prototype.setGameScore = function (score) {
        var data = {};
        for (var i = 9; i > -1; i--) {
            data["num" + i] = { index: score % 10 };
            score /= 10;
        }
        this.gameScore.dataSource = data;
    };
    GameTopPanel.prototype.onDisable = function () {
    };
    return GameTopPanel;
}(Laya.Script));
exports.default = GameTopPanel;

},{}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ListenerManger_1 = require("../manger/ListenerManger");
var HannerMgr = /** @class */ (function (_super) {
    __extends(HannerMgr, _super);
    function HannerMgr() {
        return _super.call(this) || this;
    }
    HannerMgr.prototype.onEnable = function () {
        ListenerManger_1.ListenerMgr.Instance().on('onHammerHit', this, this.onHammerPlay);
        ListenerManger_1.ListenerMgr.Instance().on('onHammerMove', this, this.onHammerMove);
    };
    HannerMgr.prototype.onStart = function () {
        var effect = Laya.Pool.getItemByCreateFun("HammnerAnim", this.createAnim, this);
        this.owner.addChild(effect);
        this.hammer = effect;
        this.hammer.play(0, false);
        this.hammer.pos(-100, -100);
    };
    HannerMgr.prototype.onHammerPlay = function () {
        this.hammer && this.hammer.play(0, false);
    };
    HannerMgr.prototype.onHammerMove = function (pos) {
        this.hammer && this.hammer.pos(pos.x, pos.y);
    };
    HannerMgr.prototype.createAnim = function () {
        var resPath = "Anims/Hammer.ani";
        var ani = new Laya.Animation();
        ani.loadAnimation(resPath);
        return ani;
    };
    HannerMgr.prototype.onMouseDown = function (data) {
        this.onHammerPlay();
        ListenerManger_1.ListenerMgr.Instance().event('onHammerHit', this.hammer);
    };
    HannerMgr.prototype.onMouseMove = function (data) {
        this.onHammerMove(new Laya.Point(data.stageX, data.stageY));
    };
    HannerMgr.prototype.onDisable = function () {
        ListenerManger_1.ListenerMgr.Instance().offAllCaller(this);
    };
    return HannerMgr;
}(Laya.Script));
exports.default = HannerMgr;

},{"../manger/ListenerManger":6}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ListenerMgr = /** @class */ (function (_super) {
    __extends(ListenerMgr, _super);
    function ListenerMgr() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ListenerMgr.Instance = function () {
        return this.instance;
    };
    ListenerMgr.instance = new Laya.EventDispatcher();
    return ListenerMgr;
}(Laya.EventDispatcher));
exports.ListenerMgr = ListenerMgr;

},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameModel = /** @class */ (function () {
    function GameModel() {
    }
    GameModel.Instacne = function () {
        if (!GameModel.instance) {
            GameModel.instance = new GameModel();
        }
        return GameModel.instance;
    };
    Object.defineProperty(GameModel.prototype, "curMouseType", {
        get: function () {
            return this._curMouseType;
        },
        set: function (type) {
            this._curMouseType = type;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameModel.prototype, "curHoleIdx", {
        get: function () {
            return this._curHoleIdx;
        },
        set: function (idx) {
            this._curHoleIdx = idx;
        },
        enumerable: true,
        configurable: true
    });
    GameModel.prototype.getHearCount = function () {
        return this._hearCount;
    };
    GameModel.prototype.hearCountMinus = function () {
        this._hearCount--;
        if (this._hearCount < 0) {
            this._hearCount = 0;
        }
    };
    Object.defineProperty(GameModel.prototype, "gameScore", {
        get: function () {
            return this._gameScore;
        },
        set: function (num) {
            this._gameScore = num;
        },
        enumerable: true,
        configurable: true
    });
    return GameModel;
}());
exports.default = GameModel;

},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
